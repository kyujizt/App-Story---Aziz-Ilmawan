importScripts("https://storage.googleapis.com/workbox-cdn/releases/6.5.4/workbox-sw.js");const{precaching,routing,strategies}=workbox,CACHE_NAME="story-app-v1";precaching.precacheAndRoute([{url:"/",revision:null},{url:"/index.html",revision:null},{url:"/favicon.png",revision:null},{url:"/images/logo.png",revision:null}]),routing.registerRoute((({request:e})=>"image"===e.destination),new strategies.CacheFirst({cacheName:"story-app-images",plugins:[new workbox.expiration.ExpirationPlugin({maxEntries:60,maxAgeSeconds:2592e3})]})),routing.registerRoute((({request:e})=>"script"===e.destination||"style"===e.destination),new strategies.StaleWhileRevalidate({cacheName:"story-app-static"})),routing.registerRoute((({url:e})=>e.pathname.startsWith("/v1/stories")),new strategies.StaleWhileRevalidate({cacheName:"story-app-api",plugins:[new expiration.ExpirationPlugin({maxEntries:50,maxAgeSeconds:604800})]})),self.addEventListener("fetch",(e=>{e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>caches.open("story-cache").then((i=>(i.put(e.request,t.clone()),t))))))).catch((()=>caches.match("/fallback.json"))))})),self.addEventListener("push",(e=>{e.waitUntil((async()=>{if(!e.data)return void console.warn("❌ Push event tidak memiliki data.");let t={title:"Notifikasi",message:"Ada cerita baru!",url:"/"};try{const i=await e.data.text();console.log("🔍 Data push diterima:",i);try{const e=JSON.parse(i);t={title:e.title||t.title,message:e.options.body||t.message,url:e.options.url||t.url}}catch{t.message=i}}catch(e){return void console.error("❌ Gagal membaca data push:",e)}if(console.log("📌 Notifikasi akan ditampilkan dengan message:",t.message),!t.title||!t.message)return;const i={body:t.message,icon:"/favicon.png",badge:"/favicon.png",vibrate:[200,100,200],data:{url:t.url||"/"},actions:[{action:"open",title:"Buka Story"},{action:"dismiss",title:"Tutup"}]};await self.registration.showNotification(t.title,i)})())})),self.addEventListener("notificationclick",(e=>{e.notification.close();const t=e.notification?.data?.url||"/";e.waitUntil(clients.matchAll({type:"window",includeUncontrolled:!0}).then((e=>{for(const i of e)if(i.url===t&&"focus"in i)return i.focus();if(clients.openWindow)return clients.openWindow(t)})))}));